#!/bin/bash

trap "echo Process is interrupted; svn unlock $1; exit 255" SIGINT SIGTERM

usage ()
{
    echo "Usage: $0 -r <repo_url> <filename>"
    exit 0
}

cicomment ()
{
    if [ $USER == "root" ]
    then
        echo Please enter username, then press [ENTER]:
        read USERNAME
    else
        USERNAME=$USER
    fi
    if [[ -z $1 ]];then
        echo Please enter a single line comment for changes made to "${EDIT_FILE}", then press [ENTER]:
        read COMMENT
    else
        COMMENT="$1"
    fi
}

vcinit ()
{
    DIRNAME=`dirname $2`   
    echo $1
    if [ "$1" == "new" ]
    then
        while true
        do
            echo Please enter URL of Subversion repository: 
            read SVNREPO
            SVNURL=$(svn info $SVNREPO | grep "Repository Root" | awk {'print $3'})
            if [ -z $SVNURL ];then
                echo $SVNREPO is not a valid Subversion repository. 
            else
                break
            fi
        done
        cicomment "Initial import of $2 to revision control."
        echo svn import $2 ${SVNURL}$2 -m $USERNAME: $COMMENT
        svn import $2 ${SVNURL}$2 -m "$USERNAME: $COMMENT"
        if [ $? != 0 ];then
            echo Error occurs, refer to previous error message for details. 
            exit 1
        fi
        svn checkout --force ${SVNURL}${DIRNAME} ${DIRNAME}
        svn -R ps svn:needs-lock ON $2
        svn ci $2 -m "$USER: set needs-lock properties."
    elif [ "$1" == "add" ]
    then
        svn add --parents $2
        svn -R ps svn:needs-lock ON $2
        cicomment "Adding $2 to revision control."
        svn ci $DIRNAME -m "$USERNAME: $COMMENT"
    fi
}

while [ -n "$1" ]; do
    while getopts ":r:" OPT; do
        case $OPT in
       	    r)
                if [ -d $OPTARG ]; then
                    REPO_DIR=`readlink -f $OPTARG`
                else
                    echo
                    echo Repository directory \"$OPTARG\" cannot found.
                    exit 1
                fi
                ;;
            \?)
                echo
                echo Invalid option -$OPTARG.
                usage
                ;;
            :)
                echo
                echo Missing argument for -$OPTARG.
                usage
                ;;
            *)
                usage
                ;;
        esac
    done
    if [ $OPTIND == 1 ]; then
        if [ -f $1 ]; then
            EDIT_FILE=`readlink -f $1`
        elif [ -d $1 ]; then
            echo \"$1\" is a directory. 
            exit 1
        else
            NEWFILE=1
            vi $1
            if [ -f $1 ]; then
                EDIT_FILE=`readlink -f $1`
            else
                exit 0
            fi
        fi
        shift
    else
        shift $((OPTIND-1))
        unset OPTIND
    fi
done

DIRNAME=$(dirname $EDIT_FILE)
FILE_STATUS=(`svn status $EDIT_FILE -v 2>/dev/null | awk {'print $1,$4'}`)
if [ -z $FILE_STATUS ]
then
    echo
    echo $EDIT_FILE is not under revision control. 
    VALID_RESPONSE=0
    while [ $VALID_RESPONSE == 0 ]
    do
        echo Would you like to add the file $EDIT_FILE to revision control?
        echo Yes \(Y\) No \(N\)
        read RESPONSE
        case $RESPONSE in
            Y|y|Yes|YES|yes)
                VALID_RESPONSE=1
                DIR_STATUS=(`svn status $DIRNAME -v 2>/dev/null`)
                if [ -z $DIR_STATUS ]
                then
                    vcinit new $EDIT_FILE
                else
                    vcinit add $EDIT_FILE
                fi
                ;;
            N|n|No|NO|no)
                VALID_RESPONSE=1
                echo
                [[ ! $NEWFILE ]] && vi $EDIT_FILE 
                echo
                exit 0
                ;;
            *)
                echo
                echo Please specify "Yes" or "No" as answer only.
                echo Please retry.
                echo
                ;;
        esac
    done
elif [ "${FILE_STATUS[0]}" == "K" ]
then
    echo File \"$EDIT_FILE\" is currently locked and being edited by user \"${FILE_STATUS[1]}\". 
    exit 1
elif [ "${FILE_STATUS[0]}" == "?" ]
then
    echo File \"$EDIT_FILE\" is not under revision control. 
    VALID_RESPONSE=0
    while [ $VALID_RESPONSE == 0 ]
    do
        echo Would you like to add the file \"$EDIT_FILE\" to revision control? 
        echo Yes \(Y\) No \(N\)
        read RESPONSE
        case $RESPONSE in
            Y|y|Yes|YES|yes)
                VALID_RESPONSE=1
                vcinit add $EDIT_FILE
                ;;
            N|n|No|NO|no)
                VALID_RESPONSE=1
                [[ ! $NEWFILE ]] && vi $EDIT_FILE
                exit 0
                ;;
            *)
                echo
                echo Please specify "Yes" or "No" as answer only.
                echo Please retry.
                echo
                ;;
        esac  
    done
elif [ "${FILE_STATUS[0]}" == "M" ]
then
    while true
    do
        echo File \"$EDIT_FILE\" has been modified but changes are not committed. 
        echo Would you like to discard the changes and proceed to edit the file? 
        echo Would you like to view the changes since the last commit? 
        echo Would you like to include the changes and proceed to edit the file? 
        echo Discard \(D\), View \(V\), Include \(I\)
        read RESPONSE
        case $RESPONSE in
            D)
                svn revert $EDIT_FILE
                break
                ;;
            V)
                svn diff $EDIT_FILE
                ;;
            I)
                break
                ;;
            *)
                echo
                echo Please specify "D", "V" or "I" as answer only. 
                echo Please retry. 
                echo
                ;;
        esac
    done
fi

svn lock $EDIT_FILE
if [ $? != 0 ]
then
    echo Cannot obtain lock on $EDIT_FILE. 
    exit 1
fi
[[ ! $NEWFILE ]] && vi $EDIT_FILE
NUM_DIFF=`svn diff ${EDIT_FILE}|wc -l`
if [ $NUM_DIFF != 0 ]
then
    cicomment
    echo $USERNAME: $COMMENT
    svn ci ${EDIT_FILE} -m "$USERNAME: $COMMENT"
else
    echo No change made on $EDIT_FILE
    svn unlock $EDIT_FILE
fi

