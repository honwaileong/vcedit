#!/bin/bash


usage ()
{
    echo -e "\033[34mUsage: vcedit -d <repodir> -f <config_file> -r <svn_repo_url> -u <svn_user> <filename> \033[0m"
    echo -e "\033[34mUsage: vcedit -c <class> \033[0m"
    echo -e "\033[34mUsage: vcedit -i <filename> \033[0m"
    echo -e "\033[34mUsage: vcedit -l <filename> \033[0m"
    echo -e "\033[34mUsage: vcedit -v <filename> \033[0m"
    exit 0
}

cicomment ()
{
    if [[ -z $1 ]];then
        echo -e "\033[34mPlease enter a single line comment for changes made to \033[31m${EDIT_FILE}\033[34m, then press [ENTER]: \033[0m"
        read COMMENT
    else
        COMMENT="$1"
    fi
}

vcinit ()
{
    FILENAME=$(basename $2)
    if [ "$1" == "new" ]
    then
        while [ ! $REPODIR ]
        do
            echo -e "\033[34mPlease enter a new name for the remote repo directory: \033[0m"
            read REPODIR
        done
        while true
        do
            if [ ! $SVNREPO ]
            then
                echo -e "\033[34mPlease enter URL of Subversion repository: \033[0m"
                read SVNREPO
            fi
            SVNURL=$(svn --config-option config:tunnels:ssh="$SSHOPTS" info $SVNREPO | grep "Repository Root" | awk {'print $3'})
            if [ -z $SVNURL ];then
                echo -e "\033[31m$SVNREPO is not a valid Subversion repository. \033[0m"
                unset SVNREPO
            else
                break
            fi
        done
        while [ ! $CLASS ]
        do
            echo -e "\033[34mPlease enter node class, e.g. login, hostname, etc.: \033[0m"
            read CLASS
        done
        svn --config-option config:tunnels:ssh="$SSHOPTS" info ${SVNURL}/${REPODIR}/${CLASS} > /dev/null 2>&1
        if [ $? == 0 ]; then
            echo
            echo -e "\033[31mYou are importing new file under a non-version-controlled directory into an existing remote repository. \033[0m"
            echo -e "\033[31m	\033[0m"
            echo -e "\033[31mDoing so will force checkout files the remote repository to your working directory where files\033[0m"
            echo -e "\033[31min your working directory could be overwritten by files of the same name from the remote repository. \033[0m"
            echo
            VALID_RESPONSE=0
            while [ $VALID_RESPONSE == 0 ]
            do
                echo -e "\033[34mDo you wish to continue? \033[0m"
                echo -e "\033[34mYes (Y) \033[0m"
                echo -e "\033[34mNo (N) \033[0m"
                read RESPONSE
                case $RESPONSE in
                    Y|y|Yes|YES|yes)
                        VALID_RESPONSE=1
                        ;;
                    N|n|No|NO|no)
                        VALID_RESPONSE=1
                        exit 0
                        ;;
                    *)
                        echo
                        echo -e "\033[31mPlease specify \033[47;31mYes\033[31m or \033[47;31mNo\033[31m as answer only. \033[0m"
                        echo -e "\033[31mPlease retry. \033[0m"
                        echo
                        ;;
                esac
            done
        fi
        cicomment "Initial import of $2 to revision control."
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn import $2 ${SVNURL}/${REPODIR}/${CLASS}/${FILENAME} -m \"$USERNAME: $COMMENT\" \033[0m"
        svn --config-option config:tunnels:ssh="$SSHOPTS" import $2 ${SVNURL}/${REPODIR}/${CLASS}/${FILENAME} -m "$USERNAME: $COMMENT"
        if [ $? != 0 ];then
            echo -e "\033[31mError occurs, refer to previous error message for details. \033[0m"
            exit 1
        fi
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn checkout --force ${SVNURL}/${REPODIR}/${CLASS} ${DIRNAME} \033[0m"
        svn --config-option config:tunnels:ssh="$SSHOPTS" checkout --force ${SVNURL}/${REPODIR}/${CLASS} ${DIRNAME}
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn -R ps svn:needs-lock ON $2 \033[0m"
        svn -R ps svn:needs-lock ON $2
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn ci $2 -m \"$USER: set needs-lock properties.\" \033[0m"
        svn --config-option config:tunnels:ssh="$SSHOPTS" ci $2 -m "$USER: set needs-lock properties."
    elif [ "$1" == "add" ]
    then
        [ $VCDEBUG ] && echo echo -e "\033[34mExecuting: svn add --parents $2 \033[0m"
        svn add --parents $2
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn -R ps svn:needs-lock ON $2 \033[0m"
        svn --config-option config:tunnels:ssh="$SSHOPTS" -R ps svn:needs-lock ON $2
        cicomment "Adding $2 to revision control."
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn ci $DIRNAME -m \"$USERNAME: $COMMENT\" \033[0m"
        svn --config-option config:tunnels:ssh="$SSHOPTS" ci $DIRNAME -m "$USERNAME: $COMMENT"
    fi
}

while [ -n "$1" ]; do
    while getopts ":c:d:f:hilr:u:v" OPT; do
        case $OPT in
            c)
                CLASS=$OPTARG
                ;;
            d)
                REPODIR=$OPTARG
                ;;
            f)
                CONF=$OPTARG
                ;;
            h)
                usage && exit 0
                ;;
            i)
                VCINFO=1
                ;;
            l)
                VCLIST=1
                ;;
       	    r)
                SVNREPOOPT=$OPTARG
                ;;
            u)
                USERNAME=$OPTARG
                ;;
            v)
                VCLOG=1
                ;;
            \?)
                echo
                echo -e "\033[34mInvalid option -$OPTARG. \033[0m"
                usage
                ;;
            :)
                echo
                echo -e "\033[34mMissing argument for -$OPTARG. \033[0m"
                usage
                ;;
            *)
                usage
                ;;
        esac
    done
    if [ $OPTIND == 1 ]; then
        if [ -e $1 ]
        then
            if [ -f $1 ]; then
                EDIT_FILE=`readlink -f $(dirname $1)`/$(basename $1)
            elif [ -d $1 ]; then
                echo -e "\033[31m\"$1\" is a directory. \033[0m"
                exit 1
            fi
        else
            NEWFILE=$1
<<DEPRECATED
            vi $1
            if [ -f $1 ]; then
                EDIT_FILE=`readlink -f $(dirname $1)`/$(basename $1)
            else
                exit 0
            fi
DEPRECATED
        fi
        shift
    else
        shift $((OPTIND-1))
        unset OPTIND
    fi
done


trap "echo Process is interrupted; echo reverting changes made to $EDIT_FILE; svn revert $EDIT_FILE; exit 255" SIGINT SIGTERM

if [ $USER == "root" ]
then
    if [ -z $USERNAME ]
    then
        echo -e "\033[34mPlease enter username, then press [ENTER]: \033[0m"
        read USERNAME
    fi
else
    USERNAME=$USER
fi

if [ ! $CONF ]
then
    CONF=`dirname $0`/vc.conf
fi

if [ -f $CONF ]
    then
        . $CONF
    else
        echo -e "\033[31m$CONF is not found or is not a file. \033[0m"
        exit 1
fi
[ "$SSHOPTS" ] || SSHOPTS="$SVN_SSH ssh -q"
if [ $CLASS ]  
then
    if [ $NEWFILE ] || [ $EDIT_FILE ]
    then
        echo -e "\033[31m-c option cannot be used to operate on a file \033[0m" 
        exit 1
    else
        svn status >/dev/null
        [ $? == 0 ] || exit 1
        SVNURL=$(svn --config-option config:tunnels:ssh="$SSHOPTS" info | grep "^Repository Root" | awk {'print $NF'})
        REPODIR=$(svn --config-option config:tunnels:ssh="$SSHOPTS" info | grep "^Relative URL" | awk {'print $NF'} | awk -F '/' {'print $2'})
        svn --config-option config:tunnels:ssh="$SSHOPTS" info $SVNURL/$REPODIR/$CLASS 2>/dev/null
        if [ $? == 0 ]
        then
            echo -e "\033[34mChanges will be made to the following files after switching to $CLASS class: \033[0m"
            if [ ! $VCVERBOSE ]
            then
                [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn diff --summarize . $SVNURL/$REPODIR/$CLASS \033[0m"
                svn --config-option config:tunnels:ssh="$SSHOPTS" diff --summarize . $SVNURL/$REPODIR/$CLASS
                echo
                echo -e "\033[34mFor more information, please set VCVERBOSE=1 environment variable and rerun the command. \033[0m"
            else
                [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn diff . $SVNURL/$REPODIR/$CLASS \033[0m"
                svn --config-option config:tunnels:ssh="$SSHOPTS" diff . $SVNURL/$REPODIR/$CLASS
            fi
            VALID_RESPONSE=0
            while [ $VALID_RESPONSE == 0 ]
            do
                echo -e "\033[34mDo you wish to continue? \033[0m"
                echo -e "\033[34mYes (Y) \033[0m"
                echo -e "\033[34mNo (N) \033[0m"
                read RESPONSE
                case $RESPONSE in
                    Y|y|Yes|YES|yes)
                        VALID_RESPONSE=1
                        ;;
                    N|n|No|NO|no)
                        VALID_RESPONSE=1
                        exit 0
                        ;;
                    *)
                        echo
                        echo -e "\033[34mPlease specify \"Yes\" or \"No\" as answer only. \033[0m"
                        echo -e "\033[34mPlease retry. \033[0m"
                        echo
                        ;;
                esac
            done
            echo -e "\033[34mSwitching to $CLASS class. \033[0m"
            [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn switch $SVNURL/$REPODIR/$CLASS --ignore-ancestry \033[0m"
            svn --config-option config:tunnels:ssh="$SSHOPTS" switch $SVNURL/$REPODIR/$CLASS --ignore-ancestry
        else
            REPOCLASS=$(svn --config-option config:tunnels:ssh="$SSHOPTS" info | grep "^Relative URL" | awk {'print $NF'} | awk -F '/' {'print $3'})
            cicomment "Branching $REPOCLASS to $CLASS"
            echo -e "\033[34mBranching $CLASS class. \033[0m"
            [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn copy $SVNURL/$REPODIR/$REPOCLASS $SVNURL/$REPODIR/$CLASS -m \"$USERNAME: $COMMENT\" \033[0m"
            svn --config-option config:tunnels:ssh="$SSHOPTS" copy $SVNURL/$REPODIR/$REPOCLASS $SVNURL/$REPODIR/$CLASS -m "$USERNAME: $COMMENT" 
            echo -e "\033[34mSwitching to $CLASS class. \033[0m"
            [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn switch $SVNURL/$REPODIR/$CLASS --ignore-ancestry \033[0m"
            svn --config-option config:tunnels:ssh="$SSHOPTS" switch $SVNURL/$REPODIR/$CLASS --ignore-ancestry
        fi
        exit 0
    fi
fi

if [ $NEWFILE ] && [ ! $VCLIST ] && [ ! $VCINFO ] && [ ! $VCLOG ] 
then
    if [ ! `svn --config-option config:tunnels:ssh="$SSHOPTS" status -u -v $NEWFILE | awk {'print $NF'} | grep $NEWFILE` ] 
    then
        vi $NEWFILE
        if [ -f $NEWFILE ]
        then
            EDIT_FILE=`readlink -f $(dirname $NEWFILE)`/$(basename $NEWFILE)
        else
            exit 0
    fi
    else
        echo -e "\033[34mAn existing file of the same name exists on the repository. The file will be exported to current working directory before editing. \033[0m"
        VALID_RESPONSE=0
        while [ $VALID_RESPONSE == 0 ]
        do
            echo -e "\033[34mDo you wish to continue? \033[0m"
            echo -e "\033[34mYes (Y) \033[0m"
            echo -e "\033[34mNo (N) \033[0m"
            read RESPONSE
            case $RESPONSE in
                Y|y|Yes|YES|yes)
                    VALID_RESPONSE=1
                    ;;
                N|n|No|NO|no)
                    VALID_RESPONSE=1
                    exit 0
                    ;;
                *)
                    echo
                    echo -e "\033[31mPlease specify \033[47;31mYes\033[31m or \033[47;31mNo\033[31m as answer only. \033[0m"
                    echo -e "\033[31mPlease retry. \033[0m"
                    echo
                    ;;
            esac
        done
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn update $NEWFILE \033[0m"
        svn --config-option config:tunnels:ssh="$SSHOPTS" update $NEWFILE
        EDIT_FILE=`readlink -f $(dirname $NEWFILE)`/$(basename $NEWFILE)
        unset NEWFILE
    fi
fi

if [ ! $EDIT_FILE ]
then
    echo No file to edit
    if [ $VCLIST ] || [ $VCINFO ] || [ $VCLOG ]
    then
        svn info > /dev/null 
        [ $? == 0 ] || exit 1
        REPOURL=`svn info | grep "Relative URL" | awk {'print $NF'}`
        [ $VCLIST ] && echo -e "\033[34mListing files under $REPOURL \033[0m" && svn --config-option config:tunnels:ssh="$SSHOPTS" ls -v -R `svn info | grep ^URL | awk {'print $NF'}`
        [ $VCINFO ] && echo -e "\033[34mShowing info of $REPOURL \033[0m" && svn --config-option config:tunnels:ssh="$SSHOPTS" info
        [ $VCLOG ] && echo -e "\033[34mShowing changelog of $REPOURL \033[0m" && svn --config-option config:tunnels:ssh="$SSHOPTS" log -v
        exit 0
    else    
        usage
        exit 1
    fi
fi

[ $VCDEBUG ] && echo -e "\033[34mOperating on $EDIT_FILE \033[0m"
if [ $VCLOG ] || [ $VCINFO ] || [ $VCLIST ]
then
    [ $VCLOG ] && svn --config-option config:tunnels:ssh="$SSHOPTS" log -v $EDIT_FILE
    [ $VCINFO ] && svn --config-option config:tunnels:ssh="$SSHOPTS" info $EDIT_FILE
    [ $VCLIST ] && svn --config-option config:tunnels:ssh="$SSHOPTS" ls -R -v $EDIT_FILE
    [ $? == 0 ] || exit 1
    exit 0
fi

if [ $SVNREPOOPT ]
then
    SVNREPO=$SVNREPOOPT
fi

DIRNAME=$(dirname $EDIT_FILE)
SVN_STATUS=`svn status $EDIT_FILE -v`
if [ $? != 0 ]
then
    echo Unable to retreive SVN status. 
    exit 1
fi
FILE_STATUS=`svn --config-option config:tunnels:ssh="$SSHOPTS" status -u -v $EDIT_FILE | grep $EDIT_FILE`
if [ -z "$FILE_STATUS" ] 
then
    echo 
    VALID_RESPONSE=0
    while [ $VALID_RESPONSE == 0 ]
    do
        echo -e "\033[34mWould you like to add the file $EDIT_FILE to revision control? \033[0m"
        echo -e "\033[34mYes (Y) No (N) \033[0m"
        read RESPONSE
        case $RESPONSE in
            Y|y|Yes|YES|yes)
                VALID_RESPONSE=1
                DIR_STATUS=(`svn status $DIRNAME -v 2>/dev/null`)
                if [ -z $DIR_STATUS ]
                then
                    vcinit new $EDIT_FILE
                else
                    vcinit add $EDIT_FILE
                fi
                ;;
            N|n|No|NO|no)
                VALID_RESPONSE=1
                [[ ! $NEWFILE ]] && vi $EDIT_FILE 
                exit 0
                ;;
            *)
                echo
                echo -e "\033[34mPlease specify \"Yes\" or \"No\" as answer only. \033[0m"
                echo -e "\033[34mPlease retry. \033[0m"
                echo
                ;;
        esac
    done
fi
<<DEPRECATED
elif [ "${FILE_STATUS[0]}" == "K" ]
then
    echo File \"$EDIT_FILE\" is currently locked and being edited by user \"${FILE_STATUS[1]}\". 
    exit 1
elif [ "${FILE_STATUS[0]}" == "?" ]
then
    echo File \"$EDIT_FILE\" is not under revision control. 
    VALID_RESPONSE=0
    while [ $VALID_RESPONSE == 0 ]
    do
        echo -e "\033[34mWould you like to add the file \"$EDIT_FILE\" to revision control? \033[0m"
        echo -e "\033[34mYes (Y) No (N) \033[0m"
        read RESPONSE
        case $RESPONSE in
            Y|y|Yes|YES|yes)
                VALID_RESPONSE=1
                vcinit add $EDIT_FILE
                ;;
            N|n|No|NO|no)
                VALID_RESPONSE=1
                [[ ! $NEWFILE ]] && vi $EDIT_FILE
                exit 0
                ;;
            *)
                echo
                echo -e "\033[34mPlease specify \"Yes\" or \"No\" as answer only. \033[0m"
                echo -e "\033[34mPlease retry. \033[0m"
                echo
                ;;
        esac  
    done
elif [ "${FILE_STATUS[0]}" == "M" ]
then
    while true
    do
        echo -e "\033[34mFile \"$EDIT_FILE\" has been modified but changes are not committed. \033[0m"
        echo -e "\033[34mWould you like to discard the changes and proceed to edit the file? \033[0m"
        echo -e "\033[34mWould you like to view the changes since the last commit? \033[0m"
        echo -e "\033[34mWould you like to include the changes and proceed to edit the file? \033]0m"
        echo -e "\033[34mDiscard (D), View (V), Include (I) \033[0m"
        read RESPONSE
        case $RESPONSE in
            D)
                svn revert $EDIT_FILE
                break
                ;;
            V)
                svn diff $EDIT_FILE
                ;;
            I)
                break
                ;;
            *)
                echo
                echo -e "\033[34mPlease specify \"D\", \"V\" or \"I\" as answer only. \033[0m"
                echo -e "\033[34mPlease retry. \033[0m"
                echo
                ;;
        esac
    done
fi
DEPRECATED

if [ "`echo "$FILE_STATUS" | grep \*`" ]
then
    echo -e "\033[34mAn existing file of the same name exists on the repository. The file will be exported to current working directory before editing. \033[0m"
    VALID_RESPONSE=0
    while [ $VALID_RESPONSE == 0 ]
    do
        echo -e "\033[34mDo you wish to continue? \033[0m"
        echo -e "\033[34mYes (Y) \033[0m"
        echo -e "\033[34mNo (N) \033[0m"
        read RESPONSE
        case $RESPONSE in
            Y|y|Yes|YES|yes)
                VALID_RESPONSE=1
                ;;
            N|n|No|NO|no)
                VALID_RESPONSE=1
                exit 0
                ;;
            *)
                echo
                echo -e "\033[31mPlease specify \033[47;31mYes\033[31m or \033[47;31mNo\033[31m as answer only. \033[0m"
                echo -e "\033[31mPlease retry. \033[0m"
                echo
                ;;
        esac
    done
    [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn update $EDIT_FILE \033[0m"
    svn --config-option config:tunnels:ssh="$SSHOPTS" update $EDIT_FILE
fi

if [ "`echo "$FILE_STATUS" | grep ^?`" ]
then
    echo -e "\033[34mFile \"$EDIT_FILE\" is not under revision control. \033[0m"
    VALID_RESPONSE=0
    while [ $VALID_RESPONSE == 0 ]
    do
        echo -e "\033[34mWould you like to add the file \"$EDIT_FILE\" to revision control? \033[0m"
        echo -e "\033[34mYes (Y) No (N) \033[0m"
        read RESPONSE
        case $RESPONSE in
            Y|y|Yes|YES|yes)
                VALID_RESPONSE=1
                vcinit add $EDIT_FILE
                ;;
            N|n|No|NO|no)
                VALID_RESPONSE=1
                [[ ! $NEWFILE ]] && vi $EDIT_FILE
                exit 0
                ;;
            *)
                echo
                echo -e "\033[34mPlease specify "Yes" or "No" as answer only. \033[0m"
                echo -e "\033[34mPlease retry. \033[0m"
                echo
                ;;
        esac
    done
fi

if [ "`echo "$FILE_STATUS" | grep ^M`" ]
then
    while true
    do
        echo -e "\033[34mFile \"$EDIT_FILE\" has been modified but changes are not committed. \033[0m"
        echo -e "\033[34mPress \"D\" to discard the changes and proceed to edit the file. \033[0m"
        echo -e "\033[34mPress \"V\" to view the changes since the last commit. \033[0m"
        echo -e "\033[34mPress \"I\" to include the changes and proceed to edit the file. \033[0m"
        echo -e "\033[34mPress \"A\" to abort. \033[0m"
        echo -e "\033[34mDo you want to Discard (D), View (V), Include (I), Abort (A)? \033[0m"
        read RESPONSE
        case $RESPONSE in
            A)
                exit 0
                ;;
            D)
                svn revert $EDIT_FILE
                break
                ;;
            V)
                svn diff $EDIT_FILE
                ;;
            I)
                break
                ;;
            *)
                echo
                echo "\033[34mPlease specify \"D\", \"V\", \"I\" or \"A\" as answer only. \033[0m"
                echo "\033[34mPlease retry. \033[0m"
                echo
                ;;
        esac
    done
fi

if [ "`\echo "$FILE_STATUS" | grep ' K '`" ]
then
    echo -e "\033[34mFile \"$EDIT_FILE\" is currently locked and being edited by user $(echo "$FILE_STATUS" | awk {'print $(NF-1)'}). \033[0m"
    exit 1
fi

echo file $EDIT_FILE status is "${FILE_STATUS[0]}"
<<DEPRECATED
case ${FILE_STATUS[0]} in
    \K)
        echo -e "\033[34mFile \"$EDIT_FILE\" is currently locked and being edited by user \"${FILE_STATUS[1]}\". \033[0m"
        exit 1
        ;;
    \\\?)
        echo -e "\033[34mFile \"$EDIT_FILE\" is not under revision control. \033[0m"
        VALID_RESPONSE=0
        while [ $VALID_RESPONSE == 0 ]
        do
            echo -e "\033[34mWould you like to add the file \"$EDIT_FILE\" to revision control? \033[0m"
            echo -e "\033[34mYes (Y) No (N) \033[0m"
            read RESPONSE
            case $RESPONSE in
                Y|y|Yes|YES|yes)
                    VALID_RESPONSE=1
                    vcinit add $EDIT_FILE
                    ;;
                N|n|No|NO|no)
                    VALID_RESPONSE=1
                    [[ ! $NEWFILE ]] && vi $EDIT_FILE
                    exit 0
                    ;;
                *)
                    echo
                    echo -e "\033[34mPlease specify "Yes" or "No" as answer only. \033[0m"
                    echo -e "\033[34mPlease retry. \033[0m"
                    echo
                    ;;
            esac
        done
        ;;
    \\M)
        while true
        do
            echo -e "\033[34mFile \"$EDIT_FILE\" has been modified but changes are not committed. \033[0m"
            echo -e "\033[34mWould you like to discard the changes and proceed to edit the file? \033[0m"
            echo -e "\033[34mWould you like to view the changes since the last commit? \033[0m"
            echo -e "\033[34mWould you like to include the changes and proceed to edit the file? \033[0m"
            echo -e "\033[34mDiscard \(D\), View \(V\), Include \(I\) \033[0m"
            read RESPONSE
            case $RESPONSE in
                D)
                    svn revert $EDIT_FILE
                    break
                    ;;
                V)
                    svn diff $EDIT_FILE
                    ;;
                I)
                    break
                    ;;
                *)
                    echo
                    echo "\033[34mPlease specify \"D\", \"V\" or \"I\" as answer only. \033[0m"
                    echo "\033[34mPlease retry. \033[0m"
                    echo
                    ;;
            esac
        done
        ;;
    \\*)
        echo -e "\033[34mAn existing file of the same name exists on the repository. The file will be exported to current working directory before editing. \033[0m"
        VALID_RESPONSE=0
        while [ $VALID_RESPONSE == 0 ]
        do
            echo -e "\033[34mDo you wish to continue? \033[0m"
            echo -e "\033[34mYes (Y) \033[0m"
            echo -e "\033[34mNo (N) \033[0m"
            read RESPONSE
            case $RESPONSE in
                Y|y|Yes|YES|yes)
                    VALID_RESPONSE=1
                    ;;
                N|n|No|NO|no)
                    VALID_RESPONSE=1
                    exit 0
                    ;;
                *)
                    echo
                    echo -e "\033[31mPlease specify \033[47;31mYes\033[31m or \033[47;31mNo\033[31m as answer only. \033[0m"
                    echo -e "\033[31mPlease retry. \033[0m"
                    echo
                    ;;
            esac
        done
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn update $NEWFILE \033[0m"
        svn --config-option config:tunnels:ssh="$SSHOPTS" update $NEWFILE
esac
DEPRECATED

[ $VCDEBUG ] && echo -e "\033[34mExecuting: svn lock $EDIT_FILE \033[0m"
svn --config-option config:tunnels:ssh="$SSHOPTS" lock $EDIT_FILE
if [ $? != 0 ]
then
    echo -e "\033[34mCannot obtain lock on $EDIT_FILE. \033[0m"
    exit 1
<<DEPRECATED
    [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn lock $EDIT_FILE \033[0m"
    svn --config-option config:tunnels:ssh="$SSHOPTS" lock $EDIT_FILE 2>&1 | grep -E "Lock failed: newer version|File already exists" > /dev/null
    if [ $? == 0 ]
    then
        echo -e "\033[34mAn updated version of the file is available from remote repository. \033[0m"
        echo -e "\033[34mThe updated file will be exported to the current working directory. \033[0m"
        VALID_RESPONSE=0
        while [ $VALID_RESPONSE == 0 ]
        do
            echo -e "\033[34mDo you wish to continue? \033[0m"
            echo -e "\033[34mYes (Y) \033[0m"
            echo -e "\033[34mNo (N) \033[0m"
            read RESPONSE
            case $RESPONSE in
                Y|y|Yes|YES|yes)
                    VALID_RESPONSE=1
                    ;;
                N|n|No|NO|no)
                    VALID_RESPONSE=1
                    exit 0
                    ;;
                *)
                    echo
                    echo -e "\033[31mPlease specify \033[47;31mYes\033[31m or \033[47;31mNo\033[31m as answer only. \033[0m"
                    echo -e "\033[31mPlease retry. \033[0m"
                    echo
                    ;;
            esac
        done
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn update $EDIT_FILE \033[0m"
        svn --config-option config:tunnels:ssh="$SSHOPTS" update $EDIT_FILE
        [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn lock $EDIT_FILE \033[0m"
        svn --config-option config:tunnels:ssh="$SSHOPTS" lock $EDIT_FILE
        if [ $? != 0 ]
        then
            echo -e "\033[34mCannot obtain lock on $EDIT_FILE. \033[0m"
            exit 1
        fi
    else
        echo -e "\033[34mCannot obtain lock on $EDIT_FILE. \033[0m"
        svn revert $EDIT_FILE
        exit 1
    fi
DEPRECATED
fi
[[ ! $NEWFILE ]] && vi $EDIT_FILE
NUM_DIFF=`svn diff ${EDIT_FILE}|wc -l`
if [ $NUM_DIFF != 0 ]
then
    cicomment
    echo $USERNAME: $COMMENT
    [ $VCDEBUG ] && echo "\033[34mExecuting: svn ci ${EDIT_FILE} -m \"$USERNAME: $COMMENT\" \033[0m"
    svn --config-option config:tunnels:ssh="$SSHOPTS" ci ${EDIT_FILE} -m "$USERNAME: $COMMENT" 
else
    echo -e "\033[34mNo change made on $EDIT_FILE \033[0m"
    [ $VCDEBUG ] && echo -e "\033[34mExecuting: svn unlock $EDIT_FILE \033[0m"
    svn --config-option config:tunnels:ssh="$SSHOPTS" unlock $EDIT_FILE
fi

